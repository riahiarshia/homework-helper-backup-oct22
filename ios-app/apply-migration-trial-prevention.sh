#!/bin/bash

# Apply Trial Abuse Prevention Database Migration
# This script applies the trial_usage_history table migration to production database

set -e  # Exit on error

echo "üóÑÔ∏è Applying Trial Abuse Prevention Database Migration..."
echo ""

# Check if migration file exists
if [ ! -f "backend/migrations/007_add_trial_abuse_prevention.sql" ]; then
    echo "‚ùå Error: Migration file not found"
    exit 1
fi

echo "üìã Migration: 007_add_trial_abuse_prevention.sql"
echo ""
echo "This will create:"
echo "  - trial_usage_history table (persists trial data after account deletion)"
echo "  - Indexes for performance"
echo "  - Triggers for automatic timestamp updates"
echo ""

# Get database connection info
echo "üîç Getting database connection info from Azure..."
DB_CONNECTION_STRING=$(az webapp config appsettings list \
    --name homework-helper-api \
    --resource-group homework-helper-rg-f \
    --query "[?name=='DATABASE_URL'].value" -o tsv)

if [ -z "$DB_CONNECTION_STRING" ]; then
    echo "‚ùå Error: Could not retrieve database connection string from Azure"
    exit 1
fi

echo "‚úÖ Database connection retrieved"
echo ""

# Parse connection string to get components
# Format: postgresql://user:pass@host:port/database?sslmode=require
DB_HOST=$(echo $DB_CONNECTION_STRING | sed -n 's/.*@\(.*\):[0-9]*.*/\1/p')
DB_USER=$(echo $DB_CONNECTION_STRING | sed -n 's/postgresql:\/\/\(.*\):.*/\1/p')
DB_NAME=$(echo $DB_CONNECTION_STRING | sed -n 's/.*\/\([^?]*\).*/\1/p')

echo "üìä Database Info:"
echo "   Host: $DB_HOST"
echo "   User: $DB_USER"
echo "   Database: $DB_NAME"
echo ""

# Confirm before proceeding
echo "‚ö†Ô∏è  This will modify the production database."
read -p "Continue? (y/N): " -n 1 -r
echo ""
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå Migration cancelled"
    exit 1
fi

echo ""
echo "üöÄ Applying migration..."
echo ""

# Apply migration using psql with connection string
PGPASSWORD="" psql "$DB_CONNECTION_STRING" < backend/migrations/007_add_trial_abuse_prevention.sql

if [ $? -eq 0 ]; then
    echo ""
    echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
    echo "‚úÖ Migration applied successfully!"
    echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
    echo ""
    echo "üìä Verifying migration..."
    echo ""
    
    # Verify table was created
    PGPASSWORD="" psql "$DB_CONNECTION_STRING" -c "\d trial_usage_history" 2>&1 | head -20
    
    echo ""
    echo "‚úÖ Table 'trial_usage_history' created successfully"
    echo ""
    echo "üéâ Trial abuse prevention is now active!"
    echo ""
    echo "What this means:"
    echo "  ‚úÖ Backend tracks Apple trials by original_transaction_id"
    echo "  ‚úÖ Data persists even after account deletion (fraud prevention)"
    echo "  ‚úÖ Apple enforces one trial per Apple ID automatically"
    echo ""
else
    echo ""
    echo "‚ùå Migration failed!"
    echo ""
    echo "Check the error messages above for details."
    echo "You may need to apply the migration manually."
    exit 1
fi

